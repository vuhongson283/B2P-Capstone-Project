import React, { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom'; // Th√™m useNavigate
import {
    CheckCircle, Users, Shield, DollarSign, Clock, Award, ArrowRight,
    Star, TrendingUp, Phone, Mail, MapPin, Play, ChevronDown,
    Zap, Heart, Target, Gift
} from 'lucide-react';
import '../Common/CourtOwnerPolicy.scss';

const CourtOwnerPolicy = () => {
    console.log('üöÄ CourtOwnerPolicy component rendered!');

    const navigate = useNavigate(); // Kh·ªüi t·∫°o navigate

    const [activeSection, setActiveSection] = useState(null);
    const [isVisible, setIsVisible] = useState({
        hero: true,
        stats: true,
        'benefits-title': true,
        'benefits-grid': true,
        'policy-title': true,
        'policy-items': true,
        cta: true
    });

    useEffect(() => {
        console.log('üîß useEffect running - Setting up intersection observer');

        const observer = new IntersectionObserver(
            (entries) => {
                entries.forEach((entry) => {
                    if (entry.isIntersecting) {
                        console.log(`‚úÖ Element visible: ${entry.target.id}`);
                        setIsVisible(prev => ({
                            ...prev,
                            [entry.target.id]: true
                        }));
                    }
                });
            },
            { threshold: 0.1 }
        );

        // Force all sections to be visible immediately
        setTimeout(() => {
            setIsVisible({
                hero: true,
                stats: true,
                'benefits-title': true,
                'benefits-grid': true,
                'policy-title': true,
                'policy-items': true,
                cta: true
            });
        }, 100);

        const elements = document.querySelectorAll('[id]');
        console.log(`üìù Found ${elements.length} elements with IDs`);

        elements.forEach((el) => {
            observer.observe(el);
        });

        return () => observer.disconnect();
    }, []);

    const toggleSection = (section) => {
        console.log(`üîÑ Toggling section: ${section}`);
        setActiveSection(activeSection === section ? null : section);
    };

    // Function ƒë·ªÉ handle navigation
    const handleRegisterClick = () => {
        console.log('üöÄ Navigating to court owner register...');
        navigate('/court-owner-register');
    };

    const handleConsultClick = () => {
        console.log('üìû Contact consultation clicked');
        // C√≥ th·ªÉ scroll ƒë·∫øn contact section ho·∫∑c m·ªü modal
        document.querySelector('.contact-section')?.scrollIntoView({
            behavior: 'smooth'
        });
    };

    const benefits = [
        {
            icon: <DollarSign className="benefit-icon-svg" />,
            title: "Thu nh·∫≠p ·ªïn ƒë·ªãnh",
            description: "TƒÉng doanh thu t·ª´ s√¢n c·ªßa b·∫°n v·ªõi h·ªá th·ªëng ƒë·∫∑t online hi·ªáu qu·∫£",
            highlight: "TƒÉng 40% doanh thu",
            colorClass: "emerald-teal"
        },
        {
            icon: <Users className="benefit-icon-svg" />,
            title: "Qu·∫£n l√Ω kh√°ch h√†ng",
            description: "H·ªá th·ªëng qu·∫£n l√Ω booking v√† kh√°ch h√†ng chuy√™n nghi·ªáp",
            highlight: "10,000+ kh√°ch h√†ng",
            colorClass: "blue-indigo"
        },
        {
            icon: <Shield className="benefit-icon-svg" />,
            title: "B·∫£o m·∫≠t thanh to√°n",
            description: "Giao d·ªãch an to√†n v·ªõi nhi·ªÅu ph∆∞∆°ng th·ª©c thanh to√°n",
            highlight: "100% b·∫£o m·∫≠t",
            colorClass: "purple-pink"
        },
        {
            icon: <Clock className="benefit-icon-svg" />,
            title: "Qu·∫£n l√Ω 24/7",
            description: "H·ªá th·ªëng ho·∫°t ƒë·ªông li√™n t·ª•c, kh√¥ng gi·ªõi h·∫°n th·ªùi gian",
            highlight: "H·ªó tr·ª£ 24/7",
            colorClass: "orange-red"
        }
    ];

    const features = [
        { icon: <Zap className="feature-icon" />, text: "B·∫£o m·∫≠t c·ª±c t·ªët" },
        { icon: <Heart className="feature-icon" />, text: "Hoa h·ªìng ch·ªâ t·ª´ 5%" },
        { icon: <Target className="feature-icon" />, text: "H·ªó tr·ª£ 24/7" },
    ];

    const stats = [
        { number: "500+", label: "S√¢n ƒë·ªëi t√°c", icon: <MapPin className="stat-icon" /> },
        { number: "10,000+", label: "Booking m·ªói th√°ng", icon: <TrendingUp className="stat-icon" /> },
        { number: "98%", label: "ƒê·ªô h√†i l√≤ng", icon: <Star className="stat-icon" /> }
    ];

    const policyItems = [
        {
            title: "1. ƒêi·ªÅu ki·ªán tham gia",
            icon: <CheckCircle className="policy-icon" />,
            content: [
                "S√¢n th·ªÉ thao ph·∫£i ƒë·∫£m b·∫£o c√°c ti√™u chu·∫©n an to√†n v√† ch·∫•t l∆∞·ª£ng c∆° b·∫£n",
                "Cung c·∫•p ƒë·∫ßy ƒë·ªß th√¥ng tin v·ªÅ ƒë·ªãa ch·ªâ, li√™n h·ªá v√† m√¥ t·∫£ s√¢n",
                "Cam k·∫øt tu√¢n th·ªß c√°c quy ƒë·ªãnh c·ªßa n·ªÅn t·∫£ng"
            ]
        },
        {
            title: "2. Quy·ªÅn l·ª£i c·ªßa ch·ªß s√¢n",
            icon: <Gift className="policy-icon" />,
            content: [
                "ƒê∆∞·ª£c h·ªó tr·ª£ qu·∫£ng b√° s√¢n tr√™n n·ªÅn t·∫£ng v·ªõi nhi·ªÅu ng∆∞·ªùi d√πng",
                "S·ª≠ d·ª•ng mi·ªÖn ph√≠ h·ªá th·ªëng qu·∫£n l√Ω booking v√† l·ªãch ƒë·∫∑t s√¢n",
                "Nh·∫≠n thanh to√°n nhanh ch√≥ng qua c√°c k√™nh thanh to√°n tr·ª±c tuy·∫øn",
                "ƒê∆∞·ª£c h·ªó tr·ª£ k·ªπ thu·∫≠t 24/7 t·ª´ ƒë·ªôi ng≈© chƒÉm s√≥c kh√°ch h√†ng",
                "Tham gia c√°c ch∆∞∆°ng tr√¨nh khuy·∫øn m√£i v√† s·ª± ki·ªán ƒë·∫∑c bi·ªát"
            ]
        },
        {
            title: "3. Nghƒ©a v·ª• c·ªßa ch·ªß s√¢n",
            icon: <Shield className="policy-icon" />,
            content: [
                "Cung c·∫•p th√¥ng tin ch√≠nh x√°c v·ªÅ s√¢n, gi√° c·∫£ v√† d·ªãch v·ª•",
                "ƒê·∫£m b·∫£o ch·∫•t l∆∞·ª£ng s√¢n v√† d·ªãch v·ª• nh∆∞ cam k·∫øt",
                "Ph·∫£n h·ªìi v√† x·ª≠ l√Ω booking trong th·ªùi gian quy ƒë·ªãnh (t·ªëi ƒëa 2 gi·ªù)",
                "Tu√¢n th·ªß gi√° c·∫£ ƒë√£ ni√™m y·∫øt tr√™n h·ªá th·ªëng",
                "B√°o c√°o k·ªãp th·ªùi c√°c v·∫•n ƒë·ªÅ ph√°t sinh v·ªõi kh√°ch h√†ng"
            ]
        },
        {
            title: "4. Ch√≠nh s√°ch hoa h·ªìng",
            icon: <DollarSign className="policy-icon" />,
            content: [
                "N·ªÅn t·∫£ng thu ph√≠ d·ªãch v·ª• 8-12% tr√™n m·ªói giao d·ªãch th√†nh c√¥ng",
                "Mi·ªÖn ph√≠ 3 th√°ng ƒë·∫ßu cho ch·ªß s√¢n m·ªõi tham gia",
                "Ch·ªß s√¢n c√≥ th·ªÉ r√∫t ti·ªÅn h√†ng tu·∫ßn v√†o th·ª© 2 v√† th·ª© 6",
                "Kh√¥ng c√≥ ph√≠ ·∫©n, minh b·∫°ch trong t·∫•t c·∫£ giao d·ªãch",
                "∆Øu ƒë√£i gi·∫£m ph√≠ cho c√°c s√¢n c√≥ doanh thu cao"
            ]
        },
        {
            title: "5. Ch√≠nh s√°ch h·ªßy v√† ho√†n ti·ªÅn",
            icon: <Clock className="policy-icon" />,
            content: [
                "Kh√°ch h√†ng c√≥ th·ªÉ h·ªßy booking tr∆∞·ªõc 2 gi·ªù m√† kh√¥ng m·∫•t ph√≠",
                "H·ªßy trong v√≤ng 2 gi·ªù s·∫Ω m·∫•t 50% ph√≠ ƒë·∫∑t s√¢n",
                "Ch·ªß s√¢n c√≥ quy·ªÅn h·ªßy trong tr∆∞·ªùng h·ª£p b·∫•t kh·∫£ kh√°ng",
                "Ho√†n ti·ªÅn 100% n·∫øu s√¢n c√≥ v·∫•n ƒë·ªÅ k·ªπ thu·∫≠t kh√¥ng th·ªÉ s·ª≠ d·ª•ng",
                "X·ª≠ l√Ω ho√†n ti·ªÅn trong v√≤ng 1-3 ng√†y l√†m vi·ªác"
            ]
        },
        {
            title: "6. Ti√™u chu·∫©n ch·∫•t l∆∞·ª£ng",
            icon: <Award className="policy-icon" />,
            content: [
                "S√¢n ph·∫£i ƒë∆∞·ª£c b·∫£o tr√¨ th∆∞·ªùng xuy√™n v√† s·∫°ch s·∫Ω",
                "ƒê·∫£m b·∫£o ƒë·∫ßy ƒë·ªß trang thi·∫øt b·ªã c∆° b·∫£n (l∆∞·ªõi, tr·ª•, b√≥ng...)",
                "C√≥ khu v·ª±c thay ƒë·ªì v√† v·ªá sinh ph√π h·ª£p",
                "ƒê·∫£m b·∫£o an ninh v√† an to√†n cho ng∆∞·ªùi ch∆°i",
                "C√≥ nh√¢n vi√™n h·ªó tr·ª£ trong gi·ªù ho·∫°t ƒë·ªông"
            ]
        }
    ];

    console.log('üé® Rendering component with isVisible:', isVisible);

    return (
        <div
            className="court-owner-policy"
            style={{
                minHeight: '100vh',
                position: 'relative',
                zIndex: 1
            }}
        >
            {/* Debug Corner */}

            {/* Header */}
            <div className="hero-section">
                <div className="hero-background">
                    <div className="floating-element floating-1"></div>
                    <div className="floating-element floating-2"></div>
                    <div className="floating-element floating-3"></div>
                    <div className="floating-element floating-4"></div>
                </div>

                <div className="container">
                    <div className="hero-content animate-in" id="hero">
                        <div className="hero-badge">
                            <Star className="badge-icon" />
                            <span>ƒê·ªëi t√°c tin c·∫≠y #1 Vi·ªát Nam</span>
                        </div>

                        <h1 className="hero-title">
                            Tr·ªü Th√†nh{' '}
                            <span className="gradient-text">ƒê·ªëi T√°c</span>
                            <br />
                            Ch·ªß S√¢n
                        </h1>

                        <p className="hero-subtitle">
                            Gia nh·∫≠p m·∫°ng l∆∞·ªõi s√¢n th·ªÉ thao h√†ng ƒë·∫ßu v√† t·∫≠n h∆∞·ªüng thu nh·∫≠p ·ªïn ƒë·ªãnh v·ªõi h√†ng ng√†n kh√°ch h√†ng ti·ªÅm nƒÉng
                        </p>

                        <div className="hero-features">
                            {features.map((feature, index) => (
                                <div key={index} className="feature-badge">
                                    <div className="feature-icon-wrapper">
                                        {feature.icon}
                                    </div>
                                    <span>{feature.text}</span>
                                </div>
                            ))}
                        </div>

                        <div className="hero-buttons">
                            <button className="btn-primary" onClick={handleRegisterClick}>
                                ƒêƒÉng K√Ω Ngay
                                <ArrowRight className="btn-arrow" />
                            </button>

                            <button className="btn-secondary" onClick={handleConsultClick}>
                                T∆∞ V·∫•n Mi·ªÖn Ph√≠
                            </button>
                        </div>
                    </div>
                </div>
            </div>

            {/* Stats Section */}
            <div className="stats-section">
                <div className="container">
                    <div className="stats-grid animate-in" id="stats">
                        {stats.map((stat, index) => (
                            <div key={index} className="stat-card">
                                <div className="stat-icon-wrapper">
                                    {stat.icon}
                                </div>
                                <div className="stat-number">{stat.number}</div>
                                <div className="stat-label">{stat.label}</div>
                            </div>
                        ))}
                    </div>
                </div>
            </div>

            {/* Benefits Section */}
            <div className="benefits-section">
                <div className="container">
                    <div className="section-header animate-in" id="benefits-title">
                        <h2 className="section-title">T·∫°i Sao Ch·ªçn Ch√∫ng T√¥i?</h2>
                        <p className="section-subtitle">
                            Nh·ªØng l·ª£i √≠ch v∆∞·ª£t tr·ªôi khi tr·ªü th√†nh ƒë·ªëi t√°c c·ªßa ch√∫ng t√¥i
                        </p>
                    </div>

                    <div className="benefits-grid animate-in" id="benefits-grid">
                        {benefits.map((benefit, index) => (
                            <div key={index} className={`benefit-card ${benefit.colorClass}`}>
                                <div className="benefit-overlay"></div>

                                <div className="benefit-icon-wrapper">
                                    {benefit.icon}
                                </div>

                                <div className="benefit-highlight">
                                    {benefit.highlight}
                                </div>

                                <h3 className="benefit-title">
                                    {benefit.title}
                                </h3>

                                <p className="benefit-description">
                                    {benefit.description}
                                </p>

                            </div>
                        ))}
                    </div>
                </div>
            </div>

            {/* Policy Section */}
            <div className="policy-section">
                <div className="container">
                    <div className="section-header animate-in" id="policy-title">
                        <h2 className="section-title">ƒêi·ªÅu Kho·∫£n & Ch√≠nh S√°ch</h2>
                        <p className="section-subtitle">
                            Minh b·∫°ch, r√µ r√†ng v√† c√≥ l·ª£i cho ƒë·ªëi t√°c
                        </p>
                    </div>

                    <div className="policy-items animate-in" id="policy-items">
                        {policyItems.map((item, index) => (
                            <div key={index} className="policy-item">
                                <button
                                    onClick={() => toggleSection(index)}
                                    className="policy-header"
                                >
                                    <div className="policy-header-content">
                                        <div className="policy-icon-wrapper">
                                            {item.icon}
                                        </div>
                                        <h3 className="policy-title">{item.title}</h3>
                                    </div>
                                    <ChevronDown
                                        className={`policy-chevron ${activeSection === index ? 'active' : ''}`}
                                    />
                                </button>

                                <div className={`policy-content ${activeSection === index ? 'active' : ''}`}>
                                    <div className="policy-content-inner">
                                        <ul className="policy-list">
                                            {item.content.map((point, pointIndex) => (
                                                <li key={pointIndex} className="policy-list-item">
                                                    <div className="policy-check">
                                                        <CheckCircle className="check-icon" />
                                                    </div>
                                                    <span>{point}</span>
                                                </li>
                                            ))}
                                        </ul>
                                    </div>
                                </div>
                            </div>
                        ))}
                    </div>
                </div>
            </div>

            {/* CTA Section */}
            <div className="cta-section">
                <div className="cta-background"></div>

                <div className="container">
                    <div className="cta-content animate-in" id="cta">
                        <div className="cta-icon-wrapper">
                            <Award className="cta-icon" />
                        </div>

                        <h2 className="cta-title">
                            S·∫µn S√†ng B·∫Øt ƒê·∫ßu H√†nh Tr√¨nh?
                        </h2>

                        <p className="cta-subtitle">
                            Gia nh·∫≠p ngay h√¥m nay ƒë·ªÉ tƒÉng doanh thu v√† ti·∫øp c·∫≠n h√†ng ng√†n kh√°ch h√†ng ti·ªÅm nƒÉng
                        </p>
                        <div className="cta-buttons">
                            {/* Button ch√≠nh s·∫Ω navigate ƒë·∫øn /court-owner-register */}
                            <button className="cta-btn-primary" onClick={handleRegisterClick}>
                                <div className="cta-btn-icon">
                                    <Play className="play-icon" />
                                </div>
                                ƒêƒÉng K√Ω Ch·ªß S√¢n Ngay
                                <ArrowRight className="cta-btn-arrow" />
                            </button>

                            <div className="contact-info">
                                <Phone className="contact-icon" />
                                <div className="contact-details">
                                    <div className="contact-label">Hotline 24/7</div>
                                    <div className="contact-value">1900-xxxx</div>
                                </div>
                            </div>
                        </div>

                        <div className="cta-features">
                            <span>‚úÖ C√≥ th·ªÉ h·ªßy b·∫•t c·ª© l√∫c n√†o</span>
                            <span>‚úÖ Kh√¥ng cam k·∫øt d√†i h·∫°n</span>
                            <span>‚úÖ Mi·ªÖn ph√≠ thi·∫øt l·∫≠p</span>
                        </div>
                    </div>
                </div>
            </div>

            {/* Contact Section */}
            <div className="contact-section">
                <div className="container">
                    <h3 className="contact-title">Li√™n H·ªá V·ªõi Ch√∫ng T√¥i</h3>
                    <div className="contact-grid">
                        <div className="contact-item">
                            <div className="contact-item-icon phone">
                                <Phone className="contact-svg" />
                            </div>
                            <div className="contact-item-content">
                                <div className="contact-item-label">Hotline</div>
                                <div className="contact-item-value">1900-xxxx</div>
                            </div>
                        </div>

                        <div className="contact-item">
                            <div className="contact-item-icon email">
                                <Mail className="contact-svg" />
                            </div>
                            <div className="contact-item-content">
                                <div className="contact-item-label">Email</div>
                                <div className="contact-item-value">support@example.com</div>
                            </div>
                        </div>

                        <div className="contact-item">
                            <div className="contact-item-icon address">
                                <MapPin className="contact-svg" />
                            </div>
                            <div className="contact-item-content">
                                <div className="contact-item-label">ƒê·ªãa ch·ªâ</div>
                                <div className="contact-item-value">H√† N·ªôi, Vi·ªát Nam</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    );
};

export default CourtOwnerPolicy;